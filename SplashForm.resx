<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOYAAAB4CAMAAADR2H66AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAADwUExURRglLQsVHM7Pz7MBF////6ytrpoBFKgBFZ0BFFVZXH8BEIWIiYUBEXoBEJQBE4IBEcM3
        SMExQ3wBEHcBD7saL44BErweMZYBE5ABEowBEooBEnUBD6EBFSQrMMbHx4cBEXEBD0hMT3MBD28BDm0B
        DqMBFZ8BFJgBEzg9QZmbnGoBDb2+v7W2t5UBFKUBFY+Rk7yNkW9ydJIBEvLp6Xp9f6KkpWNmacCNkbeN
        kNK2udm1uDoSHOrd3s2oqrspO44hLrgRJbUGG60BFksrNbscMMaZnZ9VW8hFVZs8Sn0IGVgLGN3Fxq5o
        bqI+R3U7R2gSIlh20DwAAAY/SURBVHhe7ZoJUyJJEEZtFuRSUBmGQwHxRMGL0fEYRx2dc8///2/2y6yv
        G3SZaOheJ6iOehE7XX2QnY/KOoxlweFwOBwOh8PhcDgcDofD4XA4HA7Hr8GzBiYcDcawACYcDcawACYc
        DcawACYcDcawACYcDcawACYcDcawACYcDcawACYcDcawACYcDcawACYcDcawACYcytP3ldUpuLv/wMDz
        BS3C+Pvb6tvPb6bg4dPvjDxXUCOEp293D59+m47HeexPeoTwffWBEuFkfzD0PEGPEFbupu1LaNYYep6g
        Rwgrb+kwBdlFhp4n6BGC0axWq/VSqVY7OiqVSsPhsF6vVxtCs9nsdJZAQjTrpcVcbm8vJyyC/f0arOEs
        xlBOhiYsN3Z3d4/x3wZQXcpqB9eToTnc3zvOZrPHxxQ1/TommgzNUm7Dt9TeFEutXSNZT0hvlnK7cBzv
        Sl/SjM9qIjQb6M1JkpyEMBEnQ3OYkxlo0qBUydCZ9iQT0OWlmcgf9FOp/kGPp57XRaQL0yyieTb+BmDu
        CPQIwWg2h5hoZVDepNM3lPzyLn0DSV1Oms0QzUwqIM9LM9C64GdTZ7zieXKpKI08Gv3W+BuAPqLQIwRq
        1hf3tCvT4MYMyndoXqqkbBJeVbPIj6ZS7RYvea02TlEZLXSzxPxfNKv7Oa1X0Ux/1EGpmpTsdKbQLBpG
        hTc9g9RB12sdIMioO9/jbIDhgMMJTs8ktijrS8wjAj1CMJqdxn5OZx7VTF/KzKOawXbvpWareDHAO/tI
        TxBNbRhaRdwcFE3XdIsZ9Ew7I/75AzQHJ3KjJ8MRg04fea8HkdCGIoJFKVnIkhevEegRgq9Zw14Pg9Jo
        3v6FQamaKimb2pea8nqDFunz93el4EBbvwPT1vuSuQDNMzYzQZl6LZyesw20XFm6JKbmUgNbWllEjGb6
        BjOPaJ5Sslz+uWZfTuX9eQV9psNKaUsPso0+8ccgJsrR56UiDVK04yXPZ8Y6OK5ms7SvK6WxxPCsNlTT
        /HlSnqyZN1OkdKe834CkJN3zlneOwwHu4QCVXt7rodVGeXbRPeipQdfrSeH73ek/P0I7f1Sy8TU7w5pu
        B0QRiwoEjSYlC4XJml4XB/m2n2miMzVd6LZxMBeBeHAels9JU8zNuNQvBwvHOHJ3bFKKrVnu1I90OyCG
        l3/gn9t7aqrkTzV9h3FNUdDUZa7EM3pRQNdrhQMx1nU+uCmWZiyP0OV0tMbE1iwsVUu651HNP+Xfa9Wk
        ZGFtCk29DvxbfoOP6EP+9mW0UvLmJEv5LsDYlie2ZmOo21fVbHyUg9E0kmvLr6CpvQmkKidZ9lD8bRm8
        5tNCfM267tHF77TZvPY1Kbk8i6Zc0+lTZhBzahKVc1Yg69lHTl9aaswzfzNkiKm5Vm5WdY+ump3OVzmC
        K5EUy8osmjKkkJmsntJ7fMTIXIhnS9cczLSgJxe4oXuGlCw27/KioGxjai6XO1XdvorbKRaRL2qZvqJk
        ZSZNuZcaSLmNPwL0UibTx+qog7Ofwf4IGwKdUYl5kiUrq6jUgD/bxtUsdJq6fRU3nV6lbEXTSK6vz6IZ
        7HBMejhSsyu9JuCTMhoV1Ld+L8Q8aSLqlkg63p9tY2suNXX7ajQxv5qyvaLk+tZMml5ezlMDeWBcE7tz
        GWqptuifGec+XCZo6opjmvKl8U/PmJqVtSU4YmenmrqI6Gx7BUuR3Np8qRlGS7d9E+iObuAZ80XEgR4h
        GM11DE79Q0Q1dXq9vxVNsYTk5syavwx6hBBoLun2FUPymovI1W362pfc3k6E5lalEOxejWQwKI3lTiI0
        NyuFcmCpksGgFMntnWRobq+vwZGSpiufSSZFc2u58ExyNChV8vAwEZo7W8trxvLZoAwkk6K5WYHmf2ee
        wDIZmofbFZTrxEGpkvZrfhaB6Ti2V/NuBs3dOkPPE/QI4f7N1L8kedzbZOh5gh4hPE39s6DH3Zq9P39a
        +OcxOxXHezWLf8y2sPDhh/x/hVBKW1b/NHEyjGEBTDgajGEBTDgajGEBTDgajGEBTDgajGEBTDgajGEB
        TDgajGEBTDgajGEBTDgajGEBTDgajGEBTDgajGEBTNjhcDgcDofD4XA4HA6Hw+FwOBwOx6uysPAv46/Y
        xAU3RYYAAAAASUVORK5CYII=
</value>
  </data>
</root>